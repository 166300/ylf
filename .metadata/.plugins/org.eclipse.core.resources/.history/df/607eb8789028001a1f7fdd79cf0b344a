package cn.e3mall.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.e3mall.pojo.TbItem;
import cn.e3mall.service.ItemService;
import e3.e3mall.common.poji.EasyUIDataGridResult;
import e3.e3mall.common.util.E3Result;

@Controller
public class ItemController {
	@Autowired
	//查询一条信息
	private ItemService itemService;
	
	@RequestMapping("/item/{itemId}")
	@ResponseBody
	public TbItem getItemById(@PathVariable Long itemId) {
		TbItem tbItem = itemService.getItemById(itemId);
		return tbItem;
	}
	
	@RequestMapping("/item/list")
	@ResponseBody
	public EasyUIDataGridResult getItemList(Integer page,Integer rows){
		//调用服务查询商品列表
		EasyUIDataGridResult result = itemService.getItemList(page,rows);
		return result;
	}
	
	/**
	 * 商品添加功能
	 * 
	 */
	@RequestMapping(value="/item/save",method=RequestMethod.POST)
	@ResponseBody
	public E3Result addItem(TbItem item,String desc){
		E3Result result = itemService.additem(item, desc);
		return result;
	}
	/**
	 * 商品删除
	 * 
	 */
	@RequestMapping(value="/rest/item/delete",method=RequestMethod.POST)
	@ResponseBody
	public E3Result deleteItem(String ids){
		//确认拿到字符
		System.out.println(ids);
		//按照(,)分割字符得到数组
		String[] id=ids.split(",");
		//数组长度(几个ID)
		System.out.println(id.length);
		//初始化返回值
		E3Result result=null;
		//得到几个数组就是 操作几个商品
		for (int i = 0; i < id.length; i++) {
			//查看每个ID
			System.out.println(id[i]);
			//把String 类型转成long
			long l = Long.parseLong(id[i]);
			//循环删除
			result = itemService.deleteItem(l);
		}
		return result;
	}
	
	
	/**
	 * 下架
	 * 
	 */
	@RequestMapping(value="/rest/item/instock",method=RequestMethod.POST)
	@ResponseBody
	public E3Result instockItem(String ids){
		//标记下架状态
		int make=1;
		//初始化返回值
		E3Result result=null;
		//确认拿到字符
		System.out.println(ids);
		//按照(,)分割字符得到数组
		String[] id=ids.split(",");
		//数组长度(几个ID)
		System.out.println(id.length);
		//得到几个数组就是 操作几个商品
		for (int i = 0; i < id.length; i++) {
			//查看每个ID
			System.out.println(id[i]);
			//把String 类型转成long
			long l = Long.parseLong(id[i]);
			//循环修改
			result = itemService.instockItem(l,make);
		}
		return result;
	}
	/**
	 * 下架
	 * 
	 */
	@RequestMapping(value="/rest/item/reshelf",method=RequestMethod.POST)
	@ResponseBody
	public E3Result reshelfItem(String ids){
		//标记上架状态
		int make=0;
		//初始化返回值
		E3Result result=null;
		//确认拿到字符
		System.out.println(ids);
		//按照(,)分割字符得到数组
		String[] id=ids.split(",");
		//数组长度(几个ID)
		System.out.println(id.length);
		//得到几个数组就是 操作几个商品
		for (int i = 0; i < id.length; i++) {
			//查看每个ID
			System.out.println(id[i]);
			//把String 类型转成long
			long l = Long.parseLong(id[i]);
			//循环修改
			result = itemService.instockItem(l,make);
		}
		return result;
	}
	
	/*
	 * 修改的回显
	 * 
	 * 
	 */
	@RequestMapping(value="/rest/page/item-edit{_}",method=RequestMethod.GET)
	@ResponseBody
	public void queryItem(String _){
		System.out.println(_);
		/*itemService.queryItem(id);*/
	}
	@RequestMapping(value="rest/item/param/item/query/{id}",method=RequestMethod.GET)
	@ResponseBody
	public E3Result queryItem1(@PathVariable("id") long id){
		System.out.println(id);
		E3Result queryItem = itemService.queryItem(id);
		return queryItem;
	}
	@RequestMapping(value="/rest/item/query/item/desc/{id}",method=RequestMethod.GET)
	@ResponseBody
	public E3Result queryItem2(@PathVariable("id") long id){
		System.out.println(id);
		E3Result querydesc = itemService.querydesc(id);
		return querydesc;
	}
	/**
	 * 修改
	 * 
	 */
	@RequestMapping(value="/rest/item/update",method=RequestMethod.GET)
	@ResponseBody
	public E3Result updateItem(TbItem tbItem){
		System.out.println(tbItem);
		E3Result querydesc = itemService.updateItem(id);
		return querydesc;
	}
	
	
	
	
	
	
	
}
